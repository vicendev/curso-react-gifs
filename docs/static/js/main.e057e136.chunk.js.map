{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKhB,SACE,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,a,+BCRfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEN,mCACTC,EAHe,iDAGiCC,UAAWH,GAH5C,6BAEN,oCAFM,SAIFI,MAAOF,GAJL,cAIfG,EAJe,gBAKAA,EAAKC,OALL,uBAKdC,EALc,EAKdA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEpC,OACE,sBAAKc,UAAU,6CAAf,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJ+B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAyB1C,OAlBAC,qBAAW,WAETxB,EAASC,GACNwB,MAAM,SAAAC,GAELC,YAAW,WAETJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAGV,UAIN,CAACpB,IAEGqB,EDtBwBM,CAAa3B,GAAhCa,EAF2B,EAEhCN,KAAaa,EAFmB,EAEnBA,QAEpB,OACE,qCACE,6BAAMpB,IAEJoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEb,qBAAKA,UAAU,uDAAf,SAEMH,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEOA,GADAA,EAAIC,aEdZiB,EAAe,WAAO,IAAD,EAEI1C,mBAAS,CAAC,cAFd,mBAEzB2C,EAFyB,KAEb5C,EAFa,KAIhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI4C,EAAWpB,KAAK,SAACT,GAAD,OACd,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCbnB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e057e136.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  \r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue( e.target.value )\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2){\r\n      setCategories( cats => [inputValue ,...cats])\r\n      setInputValue('');\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input \r\n          type=\"text\"\r\n          value={ inputValue }\r\n          onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n  const apiKey = 'U1WQS4ZihpB1VKCRJJBqV5tXz9SJFRe4';\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=${apiKey}`\r\n  const resp = await fetch( url);\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n  \r\n  return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n  \r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{ category }</h3>\r\n      \r\n      { loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\r\n\r\n      <div className=\"card-grid card animate__animated animate__fadeInLeft\">\r\n          {\r\n            images.map( (img) => (\r\n              <GifGridItem \r\n                key={img.id}\r\n                { ...img }\r\n              />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n\r\n    getGifs( category )\r\n      .then( imgs => {\r\n\r\n        setTimeout(() => {\r\n\r\n          setstate({\r\n            data: imgs,\r\n            loading: false\r\n          })\r\n\r\n        }, 3000);\r\n\r\n      });\r\n\r\n  }, [category])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['One Piece'])\r\n\r\n  return ( \r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr/>\r\n      \r\n      <ol>\r\n        {\r\n          categories.map( (category) => (\r\n            <GifGrid \r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n      \r\n    </>\r\n   );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}